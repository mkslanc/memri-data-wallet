
MessageChannel {
    title: "Channel Info"
    defaultRenderer: generalEditor
    
    [renderer = generalEditor] {
        layout: [
            { section: profilePicture }
            { section: other, fields: * }
            { section: dates }
        ]
        
        profilePicture {
            showTitle: false
        
            VStack {
                alignment: bottomright
                maxHeight: 300
                
                Image {
                    image: {{.receiver.owner.profilePicture}}
                    sizingMode: fill
                }
                
                HStack {
                    padding: 10
                    background: #efef /* TODO: Support opacity in the background */
                    
                    MemriButton {
                        item: {{.receiver.owner}}
                    }
                    Spacer
                    MemriButton {
                        item: {{.receiver.network}}
                    }
                }
            }
        }
    }
}

.messageChannelView {
    defaultRenderer: list
    title: {{channel.receiver.owner.firstName or channel.name or channel.topic}}
    
    titleActionButton: openView {
        item: {{channel}}
    }

    bottomBar: {
        messageComposer
    }

    [datasource = pod] {
        query: Message
        filter: {
            edgeTargets: {
               messageChannel: {{channelUID}}
            }
        }
        sortProperty: dateSent
        sortAscending: false
    }
    
    [renderer = list] {
        hideSeparators: true
    }
    
    Message > list {
        onPress: doNothing
    }
    
    Message > timeline {
        onPress: doNothing
    }
}

    
MessageChannel > list {
    onPress: openView {
        viewName: messageChannelView
        viewArguments {
            channelUID: {{.uid}}
            channel: {{.}}
        }
    }

    HStack {
        alignment: center
        
        ZStack {
            alignment: top
            margin: 0 15 0 0
        
            Image {
                image: {{.receiver.owner.profilePicture}}
                sizingMode: fill
                minHeight: 50
                maxHeight: 50
                minWidth: 50
                maxWidth: 50
                cornerRadius: 30
            }
        }
        
        VStack {
            alignment: leading
            HStack {
                Text {
                    text: "{.receiver.owner.firstName} {.receiver.owner.lastName}"
                    font: 18 semibold
                    color: primary
                    padding: 0 0 3 0
                }
                
                Spacer
                
                Text {
                    text: "{.~messageChannel[].last().dateSent}"
                    font: 9 regular
                    color: tertiary
                    padding: 4 0 3 0
                }
            }
            HStack {
                Text {
                    text: "{.~messageChannel[].last().photo ? '[Photo]' : .~messageChannel[].last().content.plainString() or 'No messages yet'}"
                    lineLimit: 2
                    font: 14 regular
                    color: secondary
                    padding: 0 0 5 0
                }
                Spacer
                
                Text {
                    text: "{.receiver.network.name}"
                    lineLimit: 1
                    font: 12 semibold
                    color: secondary
                    padding: 0 0 5 0
                }
            }
        }
    }
}

.allMessageChannel {
    title: "Channels"
    defaultRenderer: list
    filterButtons: [ showStarred toggleFilterPanel ]
    
        
    [datasource = pod] {
        query: "MessageChannel"
        sortProperty: dateModified
        sortAscending: true
        }
}

MessageChannel > timeline {
    onPress: openView {
        viewName: messageChannelView
        viewArguments {
            channelUID: {{.uid}}
            channel: {{.}}
        }
    }
    
    TimelineItem {
        icon: "bubble.left.fill"
        title: {{.receiver.owner.fullName()}}
        text: {{.~messageChannel[].last().content.plainString() or "No messages"}}
    }
}
