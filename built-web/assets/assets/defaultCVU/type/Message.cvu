Message {
    title: {{.title or "Untitled" }}
    defaultRenderer: custom
    editActionButton: toggleEditMode
    filterButtons: [
        openView {
            icon: "increase.indent"
            title: "Show Timeline"
            
            view: {
                defaultRenderer: timeline
                
                [datasource = pod] {
                    query: "AuditItem AND ANY allEdges.targetItemID = {.uid}"
                    sortProperty: dateCreated
                    sortAscending: true
                }
                
                [renderer = timeline] {
                    timeProperty: dateCreated
                }
            }
        }
        showContextPane
    ]
    
    contextPane {
        buttons: star schedule
        
        actions: [
            showOverlay { title: "Share with..." }
            addToPanel { title: "Add to list..." }
            duplicate { title: "Duplicate Note" }
        ]
        
        navigate: [
            openView {
                title: "Timeline of this note"
                view: {
                    defaultRenderer: timeline
                    
                    [datasource = pod] {
                        query: "AuditItem AND ANY allEdges.targetItemID = {.uid}"
                        sortProperty: dateCreated
                        sortAscending: true
                    }
                    
                    [renderer = timeline] {
                        timeProperty: dateCreated
                    }
                }
            }
            openViewByName {
                title: "Starred notes"
                viewName: "filter-starred"
                viewArguments: {
                    include: "all-notes"
                }
            }
            openSessionByName {
                title: "All notes"
                sessionName: "all-notes"
            }
        ]
    }
    
    [renderer = custom] {
        RichTextfield {
            content: {{.content}}
            title: {{.title}}
            fontSize: 18
        }
    }
}
 
Message > list {
    VStack {
        alignment: top

        HStack {

            Image {
                cornerRadius: 50
                image: {{.sender.owner.profilePicture OR .sender.profilePicture OR "assets/images/person.png"}}
                maxHeight: 30
                maxWidth: 30
                minHeight: 30
                minWidth: 30
                sizingMode: fill
            }

            Text {
                background: {{.sender.owner = me OR .sender.isMe ? "#4F56FE" : "#eeeeee"}}
                color: {{.sender.owner = me OR .sender.isMe ? "#FBFBFB" : "#333333"}}
                cornerRadiusOnly: 0 5 5 5
                font: bodyText1
                padding: 15 10
                show: {{.content}}
                text: {{.content.plainString()}}
            }
        }
    }
}

.allMessage {
    defaultRenderer: list
    filterButtons: showStarred toggleFilterPanel
    
    [datasource = pod] {
        query: "Message"
        edges: ["sender.owner.profilePicture.file"]
        }
        
    [renderer = list] {
        spacing: 8
    }

    [renderer = timeline] {
    }
}

Message > photoViewer {
    file: {{.photo.file}}
}

Message > timeline {
    onPress: openView {
        viewName: messageChannelView
        inheritDatasource: false
        viewArguments {
            channelUID: {{.messageChannel.uid}}
            channel: {{.messageChannel}}
        }
    }
    
    TimelineItem {
        icon: "bubble.left.fill"
        title: {{.sender.owner.fullName()}}
        text: {{.content.plainString()}}
    }
}
