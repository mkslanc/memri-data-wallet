image: cirrusci/flutter:2.10.0

stages:
  - lint
  - test
  - build
  - deploy
  - Deploy_To_Dev
  - Build_QA
  - Deploy_To_QA
  - Build_Prod
  - Deploy_To_Prod

flutter_analyze:
  stage: lint
  script:
    - flutter analyze
    - flutter format -l 100 -n . --set-exit-if-changed

unit_test:
  stage: test
  script:
    - apt-get update -qq && apt-get install -y -qq sqlite3 libsqlite3-dev
    - flutter test test/*

build_web:
  stage: build
  script:
    - flutter build web --release
  artifacts:
    paths:
      - build/web

Deploy_To_Dev:
  stage: Deploy_To_Dev
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  environment:
    name: dev
  script:
    - aws s3 sync build/web s3://${FlutterAppBucket}/dev --delete
    - aws cloudfront create-invalidation --distribution-id ${DevDistributionId} --paths "/index.html" "/main.dart.js" "/assets/*"
  only:
    - dev

Build_QA:
  stage: Build_QA
  when: manual
  dependencies: []
  script:
    - mv lib/constants/app_settings.dart.qa lib/constants/app_settings.dart
    - flutter build web --release
  artifacts:
    paths:
      - build/web
  only:
    - dev
    - master
    - /release*/

Deploy_To_QA:
  stage: Deploy_To_QA
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  dependencies: ["Build_QA"]
  needs:
    - Build_QA
  environment:
    name: qa
  script:
    - aws s3 sync build/web s3://${FlutterAppBucket}/qa --delete
    - aws cloudfront create-invalidation --distribution-id ${QADistributionId} --paths "/index.html" "/main.dart.js" "/assets/*"
  only:
    - dev
    - master
    - /release*/

Build_Prod:
  stage: Build_Prod
  when: manual
  dependencies: []
  script:
    - mv lib/constants/app_settings.dart.prod lib/constants/app_settings.dart
    - flutter build web --release
  artifacts:
    paths:
      - build/web
  only:
    - master
    - /release*/

Deploy_To_Prod:
  stage: Deploy_To_Prod
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  dependencies: ["Build_Prod"]
  needs:
    - Build_Prod
  environment:
    name: prod
  script:
    - aws s3 sync build/web s3://${FlutterAppBucket}/prod --delete
    - aws cloudfront create-invalidation --distribution-id ${ProdDistributionId} --paths "/index.html" "/main.dart.js" "/assets/*"
  only:
    - master
    - /release*/

pages:
  stage: deploy
  script:
    - cp -r build/web public
  artifacts:
    paths:
      - public
  only:
    - dev

memri-docs:
  stage: deploy
  only:
    - dev
  trigger: memri/docs.memri.io