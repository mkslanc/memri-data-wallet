
Account {
    cols: 6
    defaultRenderer: singleitem
    editActionButton: toggleEditMode

    contextPane {
        buttons: star schedule
        
        actions: [
            showOverlay { title: "Share with..." }
            addToPanel { title: "Add to list..." }
            duplicate { title: "Duplicate Note" }
        ]
        
        navigate: [
            openView {
                title: "Timeline of this note"
                view: {
                    defaultRenderer: timeline
                    
                    [datasource = pod] {
                        query: "AuditItem AND ANY allEdges.targetItemID = {.uid}"
                        sortProperty: dateCreated
                        sortAscending: true
                    }
                    
                    [renderer = timeline] {
                        timeProperty: dateCreated
                    }
                }
            }
            openViewByName {
                title: "Starred notes"
                viewName: "filter-starred"
                viewArguments: {
                    include: "all-notes"
                }
            }
            openSessionByName {
                title: "All notes"
                sessionName: "all-notes"
            }
        ]
    }
    
    [renderer = custom] {
        RichTextfield {
            content: {{.content}}
            title: {{.title}}
            fontSize: 18
        }
    }
}

.allAccounts {
    defaultRenderer: list
    cols: 4
    
    title: "All Accounts"
    [datasource = pod] {
        query: Account
    }
    
    
    
    [renderer = generalEditor] {
        EditorRow {
            title: "{title}"
            
            Text {
                text: {{.name}}
                show: {{readOnly}}
            }
            Picker {
                empty: Country
                value: {{.}}
                title: "Select a country"
                default: {{me.address[primary = true].country}}
                optionsFromQuery: country
                show: {{!readOnly}}
            }
        }
    }
}

Account > list {
    onPress: openView {
        renderer: singleitem
        clearStack: true
        viewArguments: {
            mainView: false
        }
    }
    VStack {
        alignment: left

        HStack {
            alignment: left
            spacing: 15

            Image {
                image: {{.profilePicture or "assets/images/person.png"}}
                sizingMode: fill
                minHeight: 30
                maxHeight: 30
                minWidth: 30
                maxWidth: 30
                cornerRadius: 50
            }


            Text {
                text: {{.displayName or .identifier}}
                font: 12 regular
                color: #737373
            }

            Spacer
            Image {
                systemName: "ellipsis"
                color: #DFDEDE
                font: 24 light
                padding: 5 0 5 0
            }
        }
    }
}

Account > singleitem {
    VStack {
        alignment: topleft
        padding: 0 322 0 0

        Image {
            image: {{.profilePicture or "assets/images/person.png"}}
            sizingMode: fill
            minHeight: 60
            maxHeight: 120
            minWidth: 60
            maxWidth: 120
            cornerRadius: 90
        }


        Text {
            padding: 30 0 10 0
            font: headline1
            text: {{.displayName or .identifier}}
        }

        Text {
            font: bodyText2
            text: "{.service.firstuppercased() or .network.name.firstuppercased()}"
            padding 0 0 54 0
        }

    }
}
