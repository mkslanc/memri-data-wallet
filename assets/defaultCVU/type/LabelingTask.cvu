LabelingTask {
    defaultRenderer: singleItem
    showSearchBar: false
    showBottomBar: false
    showTopBar: false
    title: "Configure labelling editor"

    [renderer = singleItem] {
        scrollable: false
    }
}

LabelingTask > singleItem {
    VStack {
        alignment: topleft
        padding: 60 0 0 0

        Text {
            color: #333333
            font: headline2
            padding: 0 0 10 0
            text: "Configure labelling editor"
        }

        Text {
            font: bodyText1
            padding: 0 0 20 0
            text: "Choose the type of  text classification you want to use."
        }

        SubView {
            height: 60
            id: featureVariables
            maxWidth: 550
            view: {
                defaultRenderer: custom
                editMode: true
                viewArguments: {
                    task: {{task}}
                }

                [datasource = pod] {
                    query: TextClassification
                    sortAscending: true
                    sortProperty: dateModified
                }

                [renderer = custom] {
                    Dropdown {
                        item: {{task}}
                        list: {{items}}
                        maxWidth: 550
                        onChange: [
                            link
                            {
                                distinct: true
                                edgeType: "taskType"
                                subject: {{task}}
                            }
                        ]
                        edgeName: "taskType"

                        Text {
                            color: #FE570F
                            font: bodyText1
                            lineLimit: 1
                            text: {{.name}}
                        }
                    }
                }
            }
        }

        Text {
            font: bodyText1
            padding: 60 0 20 0
            text: "Define the labels you want to use in your app:"
        }

        FlowStack {
            list: {{.labelOption[]}}
            spacing: 15

            Wrap {
                background: #F5F5F5
                cornerRadius: 20

                Text {
                    color: #333333
                    font: bodyText1
                    padding: 5 9 5 10
                    text: "{.name}"
                }

                Button {
                    isLink: true
                    onPress: noop
                    padding: 0 11 0 0

                    Text {
                        text: "x"
                        textAlign: center
                    }
                }
            }
        }

        HStack {
            alignment: center
            background: #F0F0F0

            Textfield {
                background: #F0F0F0
                border: #333 1
                hint: "e.g. positive"
                minHeight: 15
                rows: 1
                width: 150
                value: {{.name}}
            }

            Button {
                onPress: [
                    addItem
                    {
                        openNewView: false
                        template: {
                            _type: "LabelOption"
                            name: "completely toxic"
                            ~labelOption: {{.}}
                        }
                    }
                ]
                styleName: primaryButton

                Text {
                    text: "Add new label"
                    textAlign: center
                }
            }
        }

        HStack {
            alignment: left
            padding: 50 0 0 0

            Button {
                onPress: [
                    addItem
                    {
                        openNewView: true
                        template: {
                            _type: "Dataset"
                            classification: {{items(type: "TextClassification").first()}}
                            datasetType: {{selectedDataset}}
                            variable: {{subView("featureVariables").selectedItems()}}
                            ~dataset: {{project}}
                        }
                        viewArguments: {
                            item: {{.}}
                            readOnly: false
                        }
                    }
                ]
                styleName: primaryButton

                Text {
                    text: "Preview editor"
                    textalign: bottom
                }

                Image {
                    alignment: center
                    bundleImage: "ico_arrow"
                    isVector: true
                    padding: 0 0 0 15
                }
            }

            Button {
                onPress: back
                padding: 0 0 0 15

                Text {
                    color: #333333
                    font: button_label
                    text: "Back to data setup"
                }
            }
        }
    }
}

LabelingTask > list {
    onPress: noop

    VStack {
        alignment: left

        HStack {
            alignment: left

            Text {
                text: {{.name or "Draft: Labeling app"}}
                font: 18 semibold
                color: primary
                padding: 0 0 3 0
            }
        }

    }
}

.allLabelingTasks {
    name: "all-labeling-tasks"
    title: "Data tasks"
    emptyResultText: "There are no Labeling tasks"
    defaultRenderer: singleRenderer
    sortFields: dateModified dateCreated

    [datasource = pod] {
        query: LabelingTask
        sortProperty: dateModified
        sortAscending: true
    }

}
