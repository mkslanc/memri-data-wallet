Project {
    cols: 12
    defaultRenderer: singleItem
    title: "New project"

    [renderer = singleItem] {
        background: #F6F6F6
        scrollable: true
    }
}

.add-project {
    cols: 9
    defaultRenderer: singleItem
    title: "New project"

    [renderer = singleItem] {
        scrollable: true
    }

    Project > singleItem {
        VStack {
            alignment: topleft
            padding: 60 0 0 0

            Text {
                color: #333333
                font: headline2
                padding: 0 0 30 0
                text: "Project name"
            }

            VStack {
                alignment: topleft
                background: #F0F0F0
                maxWidth: 346
                padding: 10

                Text {
                    color: #333333
                    font: small_caps
                    padding: 0 0 0 10
                    text: "YOUR PROJECT NAME"
                }

                Textfield {
                    background: #F0F0F0
                    border: #000 1
                    hint: "project 1"
                    isCollapsed: true
                    maxWidth: 346
                    rows: 1
                    value: {{.name}}
                }
            }

            Text {
                color: #333333
                font: headline2
                padding: 80 0 10 0
                text: "Select dataset source"
            }

            Text {
                color: #333333
                font: bodyText1
                padding: 0 0 20 0
                text: "Select the data source for your new app. You may only select one."
            }

            Text {
                background: #F5F5F5
                color: #333333
                font: tablist
                padding: 10
                text: "Datasources"
            }

            SubView {
                id: datasetGrid
                view: {
                    defaultRenderer: grid
                    editMode: true
                    singleChoice: true
                    viewName: datasetsGrid

                    [datasource = pod] {
                        query: DatasetType
                    }

                    [renderer = grid] {
                        layout: "flow"
                        onPress: noop
                        spacing: 30
                    }
                }
            }

            HStack {
                alignment: left
                padding: 30 0 0 0

                Button {
                    onPress: [
                        addItem
                        {
                            initialItem: {{.dataset}}
                            openNewView: true
                            template: {
                                _type: "Dataset"
                                datasetType: {{subView("datasetGrid").selectedItems().first()}}
                                name: {{generateRandom("string")}}
                                queryStr: {{subView("datasetGrid").selectedItems().first().queryStr}}
                                ~dataset: {{.}}
                            }
                            viewArguments: {
                                readOnly: false
                                selectedDataset: {{subView("datasetGrid").selectedItems().first()}}
                            }
                            viewName: "project-variables"
                        }
                    ]
                    styleName: primaryButton

                    Text {
                        text: "Set up your data"
                    }

                    Image {
                        alignment: center
                        bundleImage: "ico_arrow"
                        isVector: true
                        padding: 0 0 0 15
                    }
                }

                Button {
                    onPress: [
                        delete
                        openView
                        {
                            clearStack: true
                            inheritDatasource: false
                            viewArguments: {
                                readOnly: true
                            }
                            viewName: "allProjects"
                        }
                    ]
                    padding: 0 0 0 15

                    Text {
                        color: #333333
                        font: button_label
                        text: "Cancel"
                    }
                }
            }
        }
    }
}

Project > singleItem {
    background: #F6F6F6

    VStack {
        alignment: topleft
        padding: 60 0 30 0
        spacing: 20

        VStack {
            alignment: topleft
            background: white
            padding: 30 20 30 20
            spacing: 0

            HStack {
                alignment: topleft
                padding: 0 0 22 0

                Text {
                    color: #333333
                    font: headline1
                    text: {{.name}}
                }
            }

            Text {
                color: #999999
                font: small_caps
                text: "DATA SOURCE"
            }

            Text {
                font: ul
                padding: 5 0 20 0
                text: {{.dataset.datasetType.plugin.name}}
            }

            HStack {
                align: topleft
                padding: 42 0 0 0

                Button {
                    isLink: true
                    onPress: [
                        openView
                        {
                            viewName: "create-new-model"
                        }
                    ]
                    padding: 0 48 0 0
                    show: {{.dataset AND !.labellingPlugin}}

                    Image {
                        bundleImage: "plus"
                        color: #E9500F
                        isVector: true
                    }

                    Text {
                        color: #FE570F
                        font: tab_list
                        padding: 0 0 0 5
                        text: "Create new model"
                    }
                }

                Button {
                    isLink: true
                    onPress: [
                        openView
                        {
                            viewArguments: {
                                readOnly: false
                            }
                            viewName: "add-project"
                        }
                    ]
                    show: {{!.dataset}}

                    Image {
                        bundleImage: "ico_dataset_new"
                        color: #E9500F
                        isVector: true
                    }

                    Text {
                        color: #FE570F
                        font: tab_list
                        padding: 0 0 0 5
                        text: "Add new dataset"
                    }
                }

                Spacer

                Button {
                    isLink: true
                    onPress: [
                        delete
                        {
                            close: true
                            subject: {{.}}
                        }
                    ]

                    Image {
                        bundleImage: "ico_delete"
                        color: #E9500F
                        isVector: true
                    }

                    Text {
                        color: #FE570F
                        font: tab_list
                        padding: 0 0 0 5
                        text: "Delete project"
                    }
                }
            }
        }

        Text {
            color: #999999
            font: small_caps
            show: {{.dataset}}
            text: "DATASETS"
        }

        VStack {
            alignment: topleft
            background: white
            padding: 20
            show: {{.dataset}}

            HStack {
                alignment: topleft

                VStack {
                    alignment: topleft

                    Text {
                        color: #333333
                        font: headline2
                        text: {{.dataset.name}}
                    }

                    Text {
                        color: #999999
                        font: ul
                        text: {{.name}}
                    }
                }

                Spacer

                VStack {
                    alignment: topleft
                    maxWidth: 100
                    spacing: 5

                    Text {
                        color: #999999
                        font: small_caps
                        text: "DATA TYPE"
                    }

                    Text {
                        color: #333333
                        font: ul
                        text: "Text"
                    }

                    Text {
                        color: #999999
                        font: small_caps
                        padding: 50 0 0 0
                        text: "LABELLING PROGRESS"
                    }

                    SubView {
                        height: 22
                        view: {
                            defaultRenderer: custom
                            viewArguments: {
                                datasetEntries: {{selectedProject.dataset.entry[]}}
                                datasetEntriesCount: {{selectedProject.dataset.entry[].count()}}
                            }

                            [datasource = pod] {
                                filter: {
                                    edgeSources: {
                                        annotation: {{datasetEntries}}
                                    }
                                }
                                query: CategoricalLabel
                            }

                            [renderer = custom] {
                                Text {
                                    color: #333333
                                    font: small_caps
                                    text: "{items.count().percent(datasetEntriesCount)}%"
                                }
                            }
                        }
                        width: 100
                    }
                }

                Spacer

                VStack {
                    alignment: topleft
                    spacing: 5

                    Text {
                        color: #999999
                        font: small_caps
                        text: "FEATURE VARIABLES"
                    }

                    FlowStack {
                        list: {{.dataset.feature[]}}
                        spacing: 6

                        HStack {
                            alignment: left

                            Text {
                                color: #333333
                                font: ul
                                text: "{.propertyName}"
                            }
                        }
                    }

                    VStack {
                        SubView {
                            view: {
                                defaultRenderer: custom
                                scrollable: false
                                viewArguments: {
                                    datasetEntries: {{selectedProject.dataset.entry}}
                                    datasetEntriesCount: {{selectedProject.dataset.entry[].count()}}
                                    labellingTask: {{selectedProject.dataset.labellingTask}}
                                    readOnly: true
                                    selectedDataset: {{selectedProject.dataset}}
                                }

                                [datasource = pod] {
                                    filter: {
                                        edgeSources: {
                                            entry: {{selectedDataset}}
                                        }
                                    }
                                    query: DatasetEntry
                                }

                                [renderer = custom] {
                                    HStack {
                                        alignment: topleft

                                        VStack {
                                            alignment: topleft

                                            Text {
                                                color: #999999
                                                font: small_caps
                                                padding: 20 0 0 0
                                                text: "TASK"
                                            }

                                            SubView {
                                                height: 22
                                                view: {
                                                    defaultRenderer: custom
                                                    viewArguments: {
                                                        datasetEntries: {{datasetEntries}}
                                                        datasetEntriesCount: {{datasetEntriesCount}}
                                                    }

                                                    [datasource = pod] {
                                                        filter: {
                                                            edgeSources: {
                                                                annotation: {{datasetEntries}}
                                                            }
                                                            properties: {
                                                                isSubmitted: true
                                                            }
                                                        }
                                                        query: CategoricalLabel
                                                    }

                                                    [renderer = custom] {
                                                        HStack {
                                                            alignment: left
                                                            padding: 0

                                                            Text {
                                                                color: #999999
                                                                font: ul
                                                                text: "Submitted"
                                                            }

                                                            Text {
                                                                color: #333333
                                                                font: ul
                                                                text: "{items.count()}"
                                                            }

                                                            VStack {
                                                                alignment: top
                                                                height: 22

                                                                Text {
                                                                    color: #333333
                                                                    font: small_caps
                                                                    text: "{items.count().percent(datasetEntriesCount)}%"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }

                                            SubView {
                                                height: 22
                                                view: {
                                                    defaultRenderer: custom
                                                    viewArguments: {
                                                        datasetEntries: {{datasetEntries}}
                                                        datasetEntriesCount: {{datasetEntriesCount}}
                                                    }

                                                    [datasource = pod] {
                                                        filter: {
                                                            edgeSources: {
                                                                annotation: {{datasetEntries}}
                                                            }
                                                            properties: {
                                                                isSubmitted: false
                                                            }
                                                        }
                                                        query: CategoricalLabel
                                                    }

                                                    [renderer = custom] {
                                                        HStack {
                                                            alignment: left
                                                            padding: 0

                                                            Text {
                                                                color: #999999
                                                                font: ul
                                                                text: "Skipped"
                                                            }

                                                            Text {
                                                                color: #333333
                                                                font: ul
                                                                text: "{items.count()}"
                                                            }

                                                            VStack {
                                                                alignment: top
                                                                height: 22

                                                                Text {
                                                                    color: #333333
                                                                    font: small_caps
                                                                    text: "{items.count().percent(datasetEntriesCount)}%"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }

                                            HStack {
                                                alignment: left

                                                Text {
                                                    color: #999999
                                                    font: ul
                                                    text: "Dataset"
                                                }

                                                Text {
                                                    color: #333333
                                                    font: ul
                                                    text: "{items.count()}"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }

                Spacer

                VStack {
                    alignment: topleft
                    spacing: 5

                    Text {
                        color: #999999
                        font: small_caps
                        text: "TEXT CLASSIFICATION"
                    }

                    Text {
                        color: #333333
                        font: ul
                        text: {{.dataset.labellingTask.taskType.name}}
                    }

                    VStack {
                        alignment: topleft
                        maxWidth: 200

                        Text {
                            color: #999999
                            font: small_caps
                            padding: 50 0 0 0
                            text: "LABELS"
                        }

                        SubView {
                            view: {
                                defaultRenderer: list
                                editMode: false
                                viewArguments: {
                                    datasetEntries: {{selectedProject.dataset.entry}}
                                    datasetEntriesCount: {{selectedProject.dataset.entry[].count()}}
                                    labellingTask: {{selectedProject.dataset.labellingTask}}
                                    readOnly: true
                                }
                                viewName: labelOptionListSummary

                                [datasource = pod] {
                                    filter: {
                                        edgeSources: {
                                            labelOption: {{labellingTask}}
                                        }
                                    }
                                    query: LabelOption
                                }
                            }
                        }
                    }
                }
            }

            HStack {
                align: topleft

                Button {
                    isLink: true
                    onPress: [
                        openView
                        {
                            item: {{.dataset.labellingTask}}
                            viewName: "labelling"
                        }
                    ]

                    Image {
                        bundleImage: "plus"
                        color: #E9500F
                        isVector: true
                    }

                    Text {
                        color: #FE570F
                        font: tab_list
                        padding: 0 0 0 5
                        text: "Resume labelling"
                    }
                }

                Spacer

                Button {
                    isLink: true
                    onPress: [
                        delete
                        {
                            subject: {{.dataset}}
                        }
                    ]

                    Image {
                        bundleImage: "ico_delete"
                        color: #E9500F
                        isVector: true
                    }

                    Text {
                        color: #FE570F
                        font: tab_list
                        padding: 0 10 0 0
                        text: "Delete dataset"
                    }
                }
            }
        }
    }
}

Project > list {
    onPress: [
        openView
        {
            renderer: "singleItem"
            viewArguments: {
                selectedProject: {{.}}
            }
        }
    ]

    HStack {
        alignment: topleft

        VStack {
            alignment: topleft

            Text {
                color: #333333
                font: headline2
                padding: 0 0 10 0
                text: {{.name OR "Draft: Project"}}
            }

            HStack {
                alignment: topleft

                VStack {
                    alignment: topleft
                    width: 200

                    Text {
                        font: "body_tiny_bold"
                        text: {{.dataset.datasetType.name OR "No Dataset"}}
                    }

                    Text {
                        color: "#989898"
                        font: "body_tiny"
                        text: {{.dataset.datasetType.plugin.name}}
                    }
                }

                VStack {
                    alignment: topleft
                    width: 200

                    Text {
                        font: "body_tiny_bold"
                        padding: 0 0 10 0
                        text: {{.dataset.labellingTask.taskType.name OR ""}}
                    }

                    Text {
                        color: "#989898"
                        font: "body_tiny"
                        text: "{.dataset.feature[].count() OR '0'} variables"
                    }
                }
            }
        }

        Spacer

        Image {
            color: #DFDEDE
            font: 24 light
            padding: 5 0 5 0
            systemName: "ellipsis"
        }
    }
}

.allProjects {
    actionButton: [
        addItem
        {
            color: "#FE570F"
            template: {
                _type: Project
            }
            title: "Create new project"
            viewName: "add-project"
        }
    ]
    cols: 12
    defaultRenderer: list
    emptyResult: {
        HStack {
            Text {
                text: "There are no projects right now"
            }
        }
    }
    name: "all-projects"
    sortFields: dateModified dateCreated
    title: "All projects"

    [datasource = pod] {
        query: Project
        sortAscending: false
        sortProperty: dateModified
    }

    [renderer = list] {
        edgeInset: 30 30 10 30
        spacing: 0 20
    }
}

.project-variables {
    cols: 12
    defaultRenderer: scene
    name: "project-variables"
    title: "Set up your data"

    [renderer = scene] {
        pages: {
            featureVariables: "feature-variables"
            projectSummary: "project-summary"
        }
        viewArguments: {
            project: {{item}}
            selectedDataset: {{.}}
        }
    }
}

.feature-variables {
    cols: 9
    defaultRenderer: singleItem
    title: "Set up your data"

    [renderer = singleItem] {
        scrollable: false
    }

    Dataset > singleItem {
        VStack {
            alignment: topleft
            padding: 60 30 30 30

            Text {
                color: #333333
                font: headline1
                padding: 0 0 30 0
                text: "Set up your dataset"
            }

            Text {
                color: #333333
                font: headline2
                padding: 70 0 10 0
                text: "Select feature variables"
            }

            Text {
                font: bodyText1
                text: "Choose which information from your dataset you want to use in your app. For example, if you want the app use the message body, then choose ‘content’."
            }

            Button {
                isLink: true
                onPress: [
                    openLink
                    {
                        link: "https://memri.docs.memri.io/pod-explorer/"
                    }
                ]
                padding: 35 0 13 0

                Text {
                    color: #E9500F
                    font: link
                    text: "Preview database (opens data explorer)"
                }
            }

            SubView {
                id: featureVariables
                view: {
                    defaultRenderer: grid
                    editMode: true
                    viewArguments: {
                        selectedDataset: {{selectedDataset}}
                    }

                    [datasource = pod] {
                        filter: {
                            properties: {
                                itemType: {{selectedDataset.queryStr.fromjson("type")}}
                            }
                        }
                        groupBy: {
                            properties: "propertyName"
                        }
                        query: ItemPropertySchema
                        sortAscending: true
                        sortProperty: dateModified
                    }

                    [renderer = grid] {
                        edgeInset: 0
                        layout: flow
                        showDefaultSelections: false
                        spacing: 5
                    }

                    ItemPropertySchema > grid {
                        Wrap {
                            background: {{isSelected ? "#33FE570F" : "#F5F5F5"}}
                            cornerRadius: 2
                            padding: 10 12

                            Text {
                                color: {{isSelected ? "#FE570F" : "#999999"}}
                                font: tab_list
                                lineLimit: 1
                                text: {{.propertyName.plainString() OR "Untitled"}}
                            }

                            Image {
                                alignment: center
                                bundleImage: "check"
                                color: {{isSelected ? "#FE570F" : "#DFDEDE"}}
                                isVector: true
                                padding: 0 0 0 17
                            }
                        }
                    }
                }
            }

            HStack {
                alignment: left
                padding: 30 0 0 0

                Button {
                    onPress: [
                        link
                        {
                            edgeType: "~feature"
                            subject: {{subView("featureVariables").selectedItems()}}
                        }
                        createLabellingTask
                        {
                            dataset: {{.}}
                            features: {{subView("featureVariables").selectedItems()}}
                            initialItem: {{.labellingTask}}
                            openNewView: true
                            template: {
                                _type: "LabellingTask"
                                taskType: {{items(type: "TextClassification").first()}}
                                view: {{item(888)}}
                                ~labellingTask: {{.}}
                            }
                            viewArguments: {
                                pageLabel: "~main"
                                readOnly: false
                                task: {{.}}
                            }
                            viewName: "labelling-task-overview"
                        }
                    ]
                    styleName: primaryButton

                    Text {
                        text: "Configure labelling editor"
                        textalign: bottom
                    }

                    Image {
                        alignment: center
                        bundleImage: "ico_arrow"
                        isVector: true
                        padding: 0 0 0 15
                    }
                }

                Button {
                    onPress: [
                        back
                        {
                            pageLabel: "~main"
                        }
                    ]
                    padding: 0 0 0 15

                    Text {
                        color: #333333
                        font: button_label
                        text: "Back to project setup"
                    }
                }
            }
        }
    }
}

.project-summary {
    cols: 3
    defaultRenderer: custom

    VStack {
        alignment: topleft
        padding: 60 30 30 30

        Text {
            color: #999999
            font: small_caps
            text: "SUMMARY"
        }

        Text {
            font: headline2
            padding: 0 0 30 0
            text: {{selectedDataset.name}}
        }

        Text {
            color: #999999
            font: small_caps
            text: "SOURCE"
        }

        Text {
            font: ul
            padding: 0 0 20 0
            text: {{selectedDataset.datasetType.plugin.name}}
        }

        Text {
            color: #999999
            font: small_caps
            text: "DATA TYPE"
        }

        Text {
            font: ul
            padding: 0 0 20 0
            text: "Text"
        }

        Text {
            color: #999999
            font: small_caps
            show: {{selectedDataset.feature}}
            text: "FEATURE VARIABLES"
        }

        FlowStack {
            list: {{selectedDataset.feature[]}}
            spacing: 10

            HStack {
                alignment: left

                Text {
                    color: #333333
                    font: ul
                    text: "{.propertyName}"
                }
            }
        }
    }
}