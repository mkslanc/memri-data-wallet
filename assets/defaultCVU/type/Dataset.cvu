Dataset {
    title: "{.name}"
    defaultRenderer: list
}

Dataset > list {
    onPress: noop

    HStack {
        alignment: left

        Text {
            text: {{.name.plainString() or "Untitled"}}
            lineLimit: 1
            font: bodyText1
            color: #737373
        }
    }
}

Dataset > grid {
    onPress: noop

    VStack {
        alignment: leftspacebetween
        background: {{.plugin.~plugin[].last() ? "#F5F5F5" : "#FFFFFF"}}
        border: "#F0F0F0"
        height: 96
        padding: 10
        spacing: 5
        width: 205

        Text {
            color: {{.plugin.~plugin[].last() ? "#333333" : "#999999"}}
            font: headline3
            text: {{.plugin.name}}
        }

        Text {
            color: #989898
            font: body_tiny
            padding: 5 0 0 0
            text: {{.plugin.~plugin[].last() ? " feature variables" : " "}}
        }

        Text {
            color: #989898
            font: body_tiny
            text: {{.plugin.~plugin[].last() ? " MB" : " "}}
        }

        Observer {
            item: {{.plugin.~plugin[].last()}}
            property: "progress"

            Text {
                padding: 0 10 0 0
                color: {{.plugin.~plugin[].last() ? .plugin.~plugin[].last().status = "error" ? "#FE570F" : "#15B599" : "#FE570F"}}
                font: {{.plugin.~plugin[].last() ? "body_tiny" : "body_tiny_bold"}}
                show: {{.plugin.~plugin[].last().status != "ready" AND .plugin.~plugin[].last().progress != 1}}
                text: "{.plugin.~plugin[].last() ? .plugin.~plugin[].last().status = 'error' ? 'Error' : 'Active' : 'Connect'}"
            }

            Text {
                color: #4F56FE
                font: body_tiny
                show: {{.plugin.~plugin[].last().status = "daemon" OR .plugin.~plugin[].last().status = "cvuPresented"}}
                text: "Downloading data {.plugin.~plugin[].last().progress.percent()} %"
            }
        }
    }

}


