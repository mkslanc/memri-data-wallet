Photo > list {
    onPress: openView {
        renderer: "photoViewer"
        viewArguments: {
            currentItem: {{.}}
        }
    }

    HStack {
        Image {
            image: {{.file}}
            sizingMode: fill
            width: 70
            height: 70
            background: background
        }
        VStack {
            alignment: left
            Text {
                font: bold
                text: "{.caption}"
            }
            Text {
                text: "{.dateModified}"
            }
        }
    }
}

Photo > grid {
    onPress: openView {
        renderer: "photoViewer"
        viewArguments: {
            currentItem: {{.}}
        }
    }

    Image {
        image: {{.file}}
        sizingMode: fill
        background: background
    }
}

Photo > timeline {
    onPress: openView {
        renderer: "photoViewer"
        viewArguments: {
            currentItem: {{.}}
        }
    }

    Image {
        image: {{.}}
        sizingMode: fit
        background: secondaryBackground
        height: 100
    }
 }
     
Photo > photoViewer {
    file: {{.file}}
}

Photo > fileViewer {
    file: {{.file}}
    itemTitle: {{.caption}}
}

.allPhotos {
    defaultRenderer: grid
    editActionButton: toggleEditMode
    emptyResultText: "There are no photos here yet"
    filterButtons: showStarred toggleFilterPanel
    title: "All Photos"

    [datasource = pod] {
        queryGraphQL: '''query { Photo (order_desc: dateModified) { id
        dateCreated
        dateModified
        dateServerModified
        name
        caption
        exifData
        height
        width
        channels
        encoding
        mode
        file {
            sha256
        }
        ocrText } }'''
    }

    [renderer = grid] {
        edgeInset: 0 0 0 0
        layout: photoGrid
        spacing: 1
    }

    [renderer = calendar] {
        timeProperty: {{.dateCreated}}
    }

    [renderer = fileViewer] {
        initialItem: {{currentItem}}
    }

    [renderer = photoViewer] {
        initialItem: {{currentItem}}
    }
}
