
[language = "English"] {
    sharewith: "Share with..."
    addtolist: "Add to list..."
    duplicate: "Duplicate"
    showtimeline: "Show Timeline"
    timelineof: "Timeline of this"
    starred: "Starred"
    all: "All"
}
[language = "Dutch"] {
    sharewith: "Deel met..."
    addtolist: "Voeg toe aan lijst..."
    duplicate: "Dupliceer"
    showtimeline: "Toon Tijdslijn"
    timelineof: "Tijdslijn van deze"
    starred: "Favoriete"
    all: "Alle"
}

.defaultButtonsForItem {
    editActionButton: toggleEditMode
    filterButtons: [
        openView {
            icon: "increase.indent"
            title: "{$showtimeline}"

            view: {
                defaultRenderer: timeline

                [datasource = pod] {
                    query: "AuditItem AND ANY allEdges.targetItemID = {.uid}"
                    sortProperty: dateCreated
                    sortAscending: true
                }

                [renderer = timeline] {
                    timeProperty: dateCreated
                }
            }
        }
        showContextPane
        ]

        contextPane {
            buttons: star schedule

            actions: [
                showOverlay { title: "{$sharewith}" }
                addToPanel { title: "{$addtolist}" }
                duplicate { title: "{$duplicate} {type}" }
                ]

                navigate: [
                    openView {
                        title: "{$timelineof} {type.lowercased()}"
                        view: {
                            defaultRenderer: timeline

                            [datasource = pod] {
                                query: "AuditItem AND ANY allEdges.targetItemID = {.uid}"
                                sortProperty: dateCreated
                                sortAscending: true
                            }

                            [renderer = timeline] {
                                timeProperty: dateCreated
                            }
                        }
                    }
                    openViewByName {
                        title: "{$starred} {type.plural()}"
                        viewName: "filter-starred"
                        viewArguments: {
                            include: "all-{type}"
                        }
                    }
                    openViewByName {
                        title: "{$all} {type.lowercased().plural()}"
                        viewName: "all-{type}"
                    }
                    ]
        }
}

Person {
    defaultRenderer: singleitem
    showTopBar: false
    cols: 6

    actionButton:
    [
        star
        ]

        /*include:
        "defaultButtonsForItem" { type: Person }*/

        editActionButton: toggleEditMode
        filterButtons: [
            openView {
                icon: "increase.indent"
                title: "{$showtimeline}"

                view: {
                    defaultRenderer: timeline

                    [datasource = pod] {
                        query: AuditItem
                        filter: {
                            edgeSources: {
                                changelog: {{uid}}
                            }
                        }
                    }

                    [renderer = timeline] {
                        timeProperty: dateCreated
                    }
                }
            }
            openView {
                icon: "calendar"
                title: "{$showtimeline}"

                view: {
                    defaultRenderer: timeline

                    [datasource = pod] {
                        query: EmailMessage Message Note Photo
                        edgeTargetsOperator: "OR"
                        filter: {
                            edgeTargets: {
                                sender: {{.account.uid}}
                                includes: {{uid}}
                            }
                        }
                    }

                    [renderer = timeline] {
                        timeProperty: dateCreated
                    }
                }
            }
            showContextPane
            ]

            contextPane {
                title: "{.firstName} {.lastName}"
                buttons: star schedule
                changeLog: "{.describeChangelog()}"

                navigate: [
                    openView {
                        title: "Person"
                        renderer: generalEditor
                        view: {
                            defaultRenderer: timeline

                            [datasource = pod] {
                                query: "AuditItem AND ANY allEdges.targetItemID = {.uid}"
                                sortProperty: dateCreated
                                sortAscending: true
                            }

                            [renderer = timeline] {
                                timeProperty: dateCreated
                            }
                        }
                    }
                    openViewByName {
                        title: "{$starred} {type.plural()}"
                        viewName: "filter-starred"
                        renderer: "grid"
                        viewArguments: {
                            include: "all-{type}"
                        }
                    }
                    openSessionByName {
                        title: "All Persons"
                        sessionName: "all-person"
                    }
                    ]

                    labels: {{ .label[] }}
            }


            /* end include */

            [renderer = generalEditor] {
                layout: [
                    { section: pageTitle }
                    { section: profilePicture, exclude: labels }
                    { section: email, fields: email }
                    { section: phoneNumbers, edges: hasPhoneNumber, type: PhoneNumber, showTitle: false }
                    { section: addresses, edges: address, type: Address, showTitle: false }
                    { section: web, edges: website, type: Website, showTitle: false }
                    { section: onlineProfiles, edges: account, type: Account, showTitle: false }
                    { section: birthday, fields: birthDate }
                    ]

                    pageTitle {
                        showTitle: false

                        VStack {
                            alignment: topleft

                            Text {
                                font: headline2
                                text: "Contact details"
                                padding: 0 0 14 0
                            }

                        }
                    }

                    profilePicture {
                        showTitle: false

                        HStack {
                            padding: 10 0 0 0
                            alignment: left

                            Image {
                                image: {{.profilePicture}}
                                sizingMode: fill
                                maxWidth: 30
                                maxHeight: 30
                                cornerRadius: 50
                            }

                            Text {
                                padding: 0 0 0 15
                                font: 12
                                color: #333333
                                text: "{.firstName} {.lastName}"
                            }

                            Spacer
                            Image {
                                systemName: "ellipsis"
                                color: #DFDEDE
                                font: 24 light
                                padding: 5 0 5 0
                            }

                        }
                    }

            }

            [renderer = timeline] {
                timeProperty: dateCreated
            }
}

Person > singleitem {
    VStack {
        alignment: topleft
        padding: 0 322 0 0

        Image {
            image: {{.profilePicture}}
            sizingMode: fill
            minHeight: 60
            maxHeight: 120
            minWidth: 60
            maxWidth: 120
            cornerRadius: 90
        }


        Text {
            padding: 30 0 10 0
            font: headline1
            text: "{.firstName} {.lastName}"
        }

        Text {
            font: bodyText2
            text: "{.website.url}"
            padding 0 0 54 0
        }

        Divider

        Button {
            isLink: true
            padding: 11 0 0 0

            Text {
                text: "Contact Details"
                font: headline3
            }

            onPress: openView {
                renderer: generalEditor
            }
        }

        Divider

        Button {
            isLink: true
            padding: 11 0 0 0

            Text {
                text: "Notes and reminders"
                font: headline3
            }

            onPress: openView {
                renderer: generalEditor
            }
        }

        Divider

        Button {
            isLink: true
            padding: 11 0 0 0

            Text {
                text: "Interactions"
                font: headline3
            }

            onPress: openView {
                renderer: generalEditor
            }
        }

        Divider

        Button {
            isLink: true
            padding: 11 0 0 0

            Text {
                text: "Timeline"
                font: headline3
            }

            onPress: openView {
                renderer: generalEditor
            }
        }

    }
}

Person > list {
    onPress: openView {
        renderer: singleitem
        clearStack: true
        viewArguments: {
            mainView: false
        }
    }
    VStack {
        alignment: left

        HStack {
            alignment: left
            spacing: 15

            Image {
                image: {{.profilePicture or "assets/images/person.png"}}
                sizingMode: fill
                minHeight: 30
                maxHeight: 30
                minWidth: 30
                maxWidth: 30
                cornerRadius: 50
            }


            Text {
                text: "{.firstName} {.lastName}"
                font: 12 regular
                color: #737373
            }

            Spacer
            Image {
                systemName: "ellipsis"
                color: #DFDEDE
                font: 24 light
                padding: 5 0 5 0
            }
        }
    }
}

Person > grid {
    onPress: openView {
        renderer: generalEditor
    }
    VStack {
        alignment: center

        Image {
            image: {{.profilePicture}}
            cornerRadius: 10
            sizingMode: fill
            sizingMode: fit
        }
        Text {
            text: "{.firstName} {.lastName}"
            font: 12 semibold
            textAlign: center
            color: primary
            padding: 3 0 0 0
        }
    }
}

Person > timeline {
    [datasource = pod] {
        query: EmailMessage Message Note Photo
        edgeTargetsOperator: "OR"
        filter: {
            edgeTargets: {
                sender: {{.account.uid}}
                includes: {{uid}}
            }
        }
    }
}

.allPeople {
    title: "People"
    defaultRenderer: list
    emptyResultText: "There are no people here yet"
    cols: 4

    [datasource = pod] {
        query: "Person"
        sort: {
            edgeSource: {
                edgeTarget: {
                    relationship: {{me.uid}}
                }
                name: relationship
                sortProperty: value
                sortAscending: false
            }
        }
    }

    filterButtons: [
        openView {
            viewName: "allPeople"
            title: "all"
            clearStack: true
            inheritDatasource: false
        },
        filter {
            title: "pinned"
            clearStack: true
            datasource: {
                query: Person
                filter: {
                    properties: {
                        starred: true
                    }
                }
                sort: {
                    edgeSource: {
                        edgeTarget: {
                            relationship: {{me.uid}}
                        }
                        name: relationship
                        sortProperty: value
                        sortAscending: false
                    }
                }
            }
        },
        ]

        [renderer = list] {
            contextMenu: [
                star { title: "Favourite" }
                ]
        }

        [renderer = grid] {
            spacing: 10
            edgeInset: 10
            columnSize: 100

            contextMenu: [
                star { title: "Favourite" }
                ]
        }

        [renderer = map] {
            address: {{.address[]}}
            label: "{.firstName}"
        }

}


.mixedAccountsAndPersons {
    title: "People"
    defaultRenderer: list
    cols: 4

    emptyResult: {
        VStack {
            padding: 0 30 50 30
            alignment: center

            Divider

            Text {
                text: "You have no contacts yet."
                font: headline2
                padding: 50 0 20 0
            }
            Button {
                width: 180
                onPress: openView {
                    viewName: "allPlugins"
                    clearStack: true
                    inheritDatasource: false
                }

                HStack {
                    padding: 7 0 7 0

                    Image {
                        color: #FE570F
                        bundleImage: "zap"
                        isVector: true
                        sizingMode: fill
                        minHeight: 20
                        maxHeight: 20
                        minWidth: 20
                        maxWidth: 20
                    }

                    Text {
                        text: "Start importing"
                        font: 12 regular
                        color: #FE570F
                    }
                }
            }
        }
    }

    [datasource = pod] {
        query: Person Account
        sortProperty: type
        sortAscending: false
    }

    filterButtons: [
        openView {
            viewName: "mixedAccountsAndPersons"
            title: "all"
            clearStack: true
            inheritDatasource: false
        },
        filter {
            title: "pinned"
            clearStack: true
            datasource: {
                query: Person Account
                filter: {
                    properties: {
                        starred: true
                    }
                }
                sort: {
                    edgeSource: {
                        edgeTarget: {
                            relationship: {{me.uid}}
                        }
                        name: relationship
                        sortProperty: value
                        sortAscending: false
                    }
                }
            }
        },
        filter {
            title: "people"
            clearStack: true
            datasource: {
                query: Person
                sort: {
                    edgeSource: {
                        edgeTarget: {
                            relationship: {{me.uid}}
                        }
                        name: relationship
                        sortProperty: value
                        sortAscending: false
                    }
                }
            }
        },
        filter {
            title: "accounts"
            clearStack: true
            datasource: {
                query: Account
            }
        },
        ]

}
