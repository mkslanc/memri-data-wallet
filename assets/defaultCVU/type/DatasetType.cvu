DatasetType {
    title: "{.name}"
    defaultRenderer: list
}

DatasetType > list {
    onPress: noop

    HStack {
        alignment: left

        Text {
            text: {{.name.plainString() or "Untitled"}}
            lineLimit: 1
            font: bodyText1
            color: #737373
        }
    }
}

DatasetType > grid {
    onPress: noop
    viewArguments: {
        datasources: {
            featureVariables: {
                filter: {
                    properties: {
                        itemType: {{.queryStr.fromJson("type")}}
                        propertyName: "content" "dateSent"
                    }
                }
                query: ItemPropertySchema
            }
        }
    }

    VStack {
        alignment: leftspacebetween
        background: #F5F5F5
        border: "#F0F0F0"
        height: 96
        padding: 10

        spacing: 5
        width: 205

        Text {
            color: #333333
            font: headline3
            text: {{.datasetPlugin.name}}
        }

        Text {
            color: #989898
            font: body_tiny
            padding: 0 5
            text: {{.datasourceItems("featureVariables").count() + " feature variables"}}
        }

        Observer {
            item: {{.datasetPlugin.~plugin[].last()}}
            property: "progress"

            Text {
                color: {{.datasetPlugin.~plugin[].last().status = "error" ? "#FE570F" : "#15B599"}}
                font: body_tiny
                padding: 0 10 0 0
                show: {{.datasetPlugin.~plugin[].last().status = "done" OR .datasetPlugin.~plugin[].last().status = "error" OR .datasetPlugin.~plugin[].last().progress = 1}}
                text: "{.datasetPlugin.~plugin[].last().status = 'error' ? 'Error' : 'Running'}"
            }

            Text {
                color: #4F56FE
                font: body_tiny
                show: {{.datasetPlugin.~plugin[].last().status = "daemon" OR .datasetPlugin.~plugin[].last().status = "cvuPresented"}}
                text: "Downloading data {.datasetPlugin.~plugin[].last().progress.percent()} %"
            }
        }
    }
}


