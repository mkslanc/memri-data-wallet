Plugin {
    title: "{.name}"
    defaultRenderer: generalEditor
    editActionButton: toggleEditMode
    filterButtons: [
        openView {
            icon: "increase.indent"
            title: "Show Timeline"
            
            view: {
                defaultRenderer: timeline
                
                [datasource = pod] {
                    query: "AuditItem AND ANY allEdges.targetItemID = {.uid}"
                    sortProperty: dateCreated
                    sortAscending: true
                }
                
                [renderer = timeline] {
                    timeProperty: dateCreated
                }
            }
        }
        showContextPane
        ]

        contextPane {
            buttons: star schedule

            actions: [
                showOverlay { title: "Share with..." }
                addToPanel { title: "Add to list..." }
                duplicate { title: "Duplicate Note" }
                ]

                navigate: [
                    openView {
                        title: "Timeline of this plugin"
                        view: {
                            defaultRenderer: timeline

                            [datasource = pod] {
                                query: "AuditItem AND ANY allEdges.targetItemID = {.uid}"
                                sortProperty: dateCreated
                                sortAscending: true
                            }

                            [renderer = timeline] {
                                timeProperty: dateCreated
                            }
                        }
                    }
                    openViewByName {
                        title: "Starred plugins"
                        viewName: "filter-starred"
                        viewArguments: {
                            include: "all-notes"
                        }
                    }
                    openSessionByName {
                        title: "All plugins"
                        sessionName: "all-plugins"
                    }
                    ]
        }
}

Plugin > list {
    onPress: openPlugin {
        plugin: {{.}}
    }

    VStack {
        alignment: left
        VStack {
            alignment: left
            background: #F5F5F5
            maxWidth: 550
            padding: 20



            HStack {
                alignment: left

                Text {
                    text: "{.name}"
                    font: headline2
                    color: #333333
                }
                Spacer
                Text {
                    color: {{.~plugin[].last().status = "error" ? #FE570F : #333333}}
                    text: "{.~plugin[].last().status = 'done' ? 'active' : .~plugin[].last().status = 'error' ? 'error' : 'inactive'}"
                }
            }

            Text {
                text: "{.itemDescription}"
                removeWhiteSpace: true
                maxChar: 100
                color: #989898
                font: body_tiny
                padding: 15 0 10 0
            }

            HStack {
                alignment: left
                Text {
                    text: "{.pluginType != 'importer' ? 'Install' : .~plugin[].last().status = 'error' ? 'Re-authenticate' : 'Install'}"
                    font: btn_label
                    color: #FE570F
                }
            }
        }
    }
}

Plugin > grid {
    onPress: pluginRun {
        name: {{.name}}
        plugin: {{.}}
        container: {{.container}}
        pluginModule: {{.pluginModule}}
        pluginName: {{.pluginName}}
        targetItemId: {{.id}}
    }

    ZStack {
        Rectangle {
            color: secondaryBackground
            cornerRadius: 5
        }

        VStack {
            alignment: center
            spacing: 5

            Image {
                show: {{.icon or .bundleImage}}
                systemName: {{.icon}}
                bundleImage: {{.bundleImage}}
                resizable: true
                color: blue
                width: 40
                height: 40
                padding: 5
            }

            Text {
                text: "{.name}"
                font: 16 semibold
                color: primary
                padding: 5 0 0 0
            }

            Text {
                text: "{.dateModified}"
                font: 11 regular
                color: secondary
                padding: 8 0 5 0
            }
        }
    }
}

.allPlugins {
    name: "all-plugins"
    title: "Apps and Plugins"
    emptyResultText: "There are no Plugins"
    defaultRenderer: list
    sortFields: datatype dateModified dateAccessed dateCreated

    [datasource = pod] {
        query: Plugin
        sortProperty: dateModified
        sortAscending: false
    }

    [renderer = list] {
    }
}
