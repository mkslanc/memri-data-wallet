Message {
    title: {{.title or "Untitled" }}
    defaultRenderer: custom

    [renderer = custom] {

    }

    Message > custom {
        RichTextfield {
            content: {{.content}}
            title: {{.title}}
            fontSize: 18
        }
    }
}

Message > list {
   VStack {
       alignment: topleft

       HStack {
           alignment: left

           Image {
               cornerRadius: 50
               image: {{.sender.owner.profilePicture OR .sender.profilePicture OR "assets/images/person.png"}}
               maxHeight: 30
               maxWidth: 30
               minHeight: 30
               minWidth: 30
               sizingMode: fill
           }

           Text {
               background: {{.sender.owner = me OR .sender.isMe ? "#4F56FE" : "#F8F8F8"}}
               color: {{.sender.owner = me OR .sender.isMe ? "#FBFBFB" : "#333333"}}
               cornerRadiusOnly: 0 5 5 5
               font: bodyText2
               padding: 15 10
               show: {{.content}}
               text: {{.content.plainString()}}
           }
       }
   }
}

.allMessages {
    defaultRenderer: messages
    filterButtons: showStarred toggleFilterPanel

    [datasource = pod] {
        query: "Message"
    }

    [renderer = list] {
        spacing: 8
    }
    
    [renderer = messages] {
        background: background
        spacing: 8
    }
    
}

Message > photoViewer {
    file: {{.photo.file}}
}

Message > timeline {
    onPress: openView {
        viewName: messageChannelView
        inheritDatasource: false
        viewArguments {
            channelUID: {{.messageChannel.uid}}
            channel: {{.messageChannel}}
        }
    }
    
    TimelineItem {
        icon: "bubble.left.fill"
        title: {{.sender.owner.fullName()}}
        text: {{.content.plainString()}}
    }
}
