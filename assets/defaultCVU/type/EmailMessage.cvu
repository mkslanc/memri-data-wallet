EmailMessage > list {
    onPress: openView

    VStack {
        alignment: left
        spacing: 3

        HStack {
            alignment: left

            Text {
                color: secondary
                font: 18
                lineLimit: 1
                padding: 0 0 0 0
                text: "{.sender.owner.firstName} {.sender.owner.lastName}"
            }

            Spacer

            Text {
                color: secondary
                font: 11 regular
                lineLimit: 1
                padding: 0 0 0 0
                text: "{.dateSent.format()}"
            }
        }

        HStack {
            fillWidth: true

            Text {
                color: primary
                font: 18 semibold
                lineLimit: 1
                padding: 0 0 0 0
                text: {{.subject OR "[No subject]"}}
            }

            Image {
                color: yellow
                font: 14
                margin: 5
                show: {{.starred}}
                systemName: "star.fill"
            }

            Spacer
        }

        Text {
            color: secondary
            font: 14 regular
            lineLimit: 2
            maxChar: 100
            removeWhiteSpace: true
            text: "{.content.plainString()}"
        }
    }
}

.allEmailMessage {
    actionButton: [
        addItem
        {
            template: {
                _type: EmailMessage
            }
        }
        ]
        defaultRenderer: list
        editActionButton: toggleEditMode
        emptyResultText: "There are no emails here yet"
        filterButtons: showStarred toggleFilterPanel
        sortFields: subject dateModified dateAccessed dateCreated
        title: "All Emails"

        [datasource = pod] {
            queryGraphQL: '''query { EmailMessage (order_asc: dateSent) { id
            dateCreated
            dateModified
            dateServerModified
            externalId
            isMock
            abstract
            content
            datePublished
            itemType
            keyword
            textContent
            title
            transcript
            dateReceived
            dateSent
            sender {
                owner {
                    firstName
                    lastName
                }
            }
            service
            subject
            sourceProject
            starred } }'''
        }
}

EmailMessage > timeline {
    onPress: openView
        
    TimelineItem {
        icon: "envelope.fill"
        title: {{.subject.plainString() or "No subject"}}
        text: {{.content.plainString()}}
    }
}

EmailMessage > singleItem {
    VStack {
        HStack {
            padding: 10 10
            spacing: 10

            ZStack {
                height: 50
                width: 50

                Circle {
                    color: #000000
                }

                Text {
                    color: #FFFFFF
                    font: 20 bold
                    text: "{.sender.owner.initials()}"
                }
            }

            VStack {
                alignment: leading
                spacing: 4

                HStack {
                    Text {
                        font: 20
                        text: "{.subject}"
                    }

                    Spacer

                    Text {
                        color: secondary
                        text: "{.dateSent.format()}"
                    }
                }

                HStack {
                    Text {
                        color: secondary
                        text: "{.sender.owner.firstName} {.sender.owner.lastName}"
                    }

                    Spacer
                }
            }
        }

        Divider

        HTMLView {
            content: {{.content}}
        }
    }
}
