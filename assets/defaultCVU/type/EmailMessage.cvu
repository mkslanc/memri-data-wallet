EmailMessage > list {
    title: ""

    VStack {
        alignment: topleft
        padding: 20

        HStack {
            alignment: left

            Circle {
                color: {{.generaterandom("string", "color")}}
                height: 30
                width: 30
            }

            VStack {
                alignment: topleft
                padding: 0 0 0 15

                Text {
                    color: #333333
                    font: 13 regular
                    text: {{.sender.displayName OR .sender.identifier}}
                }

                Text {
                    color: #999999
                    font: body_tiny
                    show: {{.sender.displayName}}
                    text: {{.sender.identifier}}
                }
            }

            Spacer

            VStack {
                Text {
                    color: #989898
                    font: body_tiny
                    text: "{.dateSent.format('dd MMMM yyyy')}"
                }
            }
        }

        Text {
            color: #333333
            font: headline3
            padding: 20 0 0 0
            text: {{.subject}}
        }
    }
}

.allEmails {
    title: "All Emails"
    emptyResultText: "There are no emails here yet"
    defaultRenderer: list
    filterButtons: showStarred toggleFilterPanel
    sortFields: subject dateModified dateAccessed dateCreated

    [datasource = pod] {
        query: "EmailMessage"
        sortProperty: dateSent
        sortAscending: false
    }

    actionButton:
    addItem {
        template {
            _type: EmailMessage
        }
    }

    editActionButton: toggleEditMode

}

EmailMessage > timeline {
    onPress: openView

    TimelineItem {
        icon: "envelope.fill"
        title: {{.subject.plainString() or "No subject"}}
        text: {{.content.plainString()}}
    }
}

EmailMessage {
    defaultRenderer: singleitem

    [renderer = singleItem] {
        edgeInset: 42 30 50 42
        scrollable: false
    }
}

EmailMessage > singleItem {
    VStack {
        alignment: topleft

        Button {
            onPress: back
            padding: 0 0 0 0

            Text {
                color: #FE570F
                font: tab_list
                text: "<   Back"
            }
        }

        Text {
            color: #333333
            font: headline2
            padding: 67 0 0 0
            text: "{.subject}"
        }

        HStack {
            alignment: left
            padding: 32 0 12 5

            Circle {
                color: {{.generaterandom("string", "color")}}
                height: 30
                width: 30
            }

            VStack {
                alignment: topleft
                padding: 0 0 0 15

                Text {
                    color: #333333
                    font: 13 regular
                    text: {{.sender.displayName OR .sender.identifier}}
                }

                Text {
                    color: #999999
                    font: body_tiny
                    show: {{.sender.displayName}}
                    text: {{.sender.identifier}}
                }
            }

            Spacer

            VStack {
                Text {
                    color: #989898
                    font: body_tiny
                    text: "{.dateSent.format('dd MMMM yyyy')}"
                }
            }
        }

        HTMLView {
            content: {{.content}}
            maxHeight: 300
        }
    }
}
