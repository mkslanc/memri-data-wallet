.inbox {
    name: "inbox"
    title: "Inbox"
    defaultRenderer: scene
    cols: 12

    [renderer = scene] {
        pages: {
            inboxChannels: "inbox-channels"
            inboxData: "inbox-data"
        }

    }

}

.inbox-channels {
    name: "inbox"
    title: "Inbox"
    defaultRenderer: list
    cols: 4
    showTopBar: true
    topBarColor: "#FFFFFF"
    showEditCode: false

    emptyResult: {
        VStack {
            padding: 0 30 50 30
            alignment: center

            Divider

            Text {
                text: "You have no messages yet."
                font: headline2
                padding: 50 0 20 0
            }
            Button {
                width: 180
                onPress: openView {
                    viewName: "inbox-channels"
                    clearStack: true
                    inheritDatasource: false
                }

                HStack {
                    padding: 7 0 7 0

                    Image {
                        color: #FE570F
                        systemName: "refresh"
                        minHeight: 20
                        maxHeight: 20
                        minWidth: 20
                        maxWidth: 20
                    }

                    Text {
                        text: "Reload"
                        font: 12 regular
                        color: #FE570F
                    }
                }
            }

            Button {
                width: 180
                onPress: openView {
                    viewName: "allPlugins"
                    clearStack: true
                    inheritDatasource: false
                }

                HStack {
                    padding: 7 0 7 0

                    Image {
                        color: #FE570F
                        bundleImage: "zap"
                        isVector: true
                        sizingMode: fill
                        minHeight: 20
                        maxHeight: 20
                        minWidth: 20
                        maxWidth: 20
                    }

                    Text {
                        text: "Start importing"
                        font: 12 regular
                        color: #FE570F
                    }
                }
            }
        }
    }

    [datasource = pod] {
        query: MessageChannel
        sort: {
            targetType: "Message"
            edgeSource: {
                name: messageChannel
                sortProperty: dateSent
                sortAscending: false
            }
        }
    }

    filterButtons: [
        openView {
            viewName: "inbox-channels"
            title: "all"
            clearStack: true
            inheritDatasource: false
            color: "#FE570F"
        },
        ]

        additional: {
            Button {
                onPress: noop

                HStack {
                    alignment: left
                    padding: 13 0 7 0

                    Image {
                        bundleImage: "plus"
                        isVector: true
                        sizingMode: fill
                        minHeight: 30
                        maxHeight: 30
                        minWidth: 30
                        maxWidth: 30
                        cornerRadius: 50
                        color: #FE570F
                    }

                    Text {
                        text: "Compose"
                        font: 12 regular
                        color: #FE570F
                    }
                }
            }
        }
}


.inbox-data {
    name: "inbox"
    title: "Inbox"
    defaultRenderer: list
    cols: 8
    showTopBar: false
    topBarColor: "#FFFFFF"
    showEditCode: false

    [datasource = pod] {
        filter: {
            properties: {
                pluginType: "importer"
            }
        }
        query: Plugin
    }

    [renderer = list] {
        onPress: noop
        hideSeparators: true
        hideSwitcher: true
    }

    Plugin > list {
            HStack {
            show: {{.~plugin[].last().status = "daemon" OR .~plugin[].last().status = "cvuPresented"}}
            alignment: topleft
                spacing: 10

                Text {
                    text: "Uploading {.name} data:"
                    font: bodyText1
                }

                Observer {
                    item: {{.~plugin[].last()}}
                    property: "progress"

                    Text {
                        color: #4F56FE
                        font: headline1
                        text: "{.~plugin[].last().progress.percent()}%"
                    }
                }
            }

    }
}