.inbox {
    name: "inbox"
    title: "Inbox"
    defaultRenderer: scene
    cols: 12

    [renderer = scene] {
        pages: {
            inboxChannels: "inbox-channels"
            inboxData: "inbox-data"
        }

    }

}

.inbox-channels {
    cols: 4
    defaultRenderer: list
    emptyResult: {
        VStack {
            alignment: center
            padding: 0 30 50 30

            Divider

            Text {
                font: headline2
                padding: 50 0 20 0
                text: "You have no messages yet."
            }

            Button {
                onPress: [
                    openView
                    {
                        clearStack: true
                        inheritDatasource: false
                        viewName: "inbox-channels"
                    }
                ]
                width: 180

                HStack {
                    padding: 7 0 7 0

                    Image {
                        color: #FE570F
                        maxHeight: 20
                        maxWidth: 20
                        minHeight: 20
                        minWidth: 20
                        systemName: "refresh"
                    }

                    Text {
                        color: #FE570F
                        font: 12 regular
                        text: "Reload"
                    }
                }
            }
        }
    }
    name: "inbox"
    showEditCode: false
    showBreadCrumbs: false
    showTopBar: true
    title: "Inbox"
    topBarColor: "#FFFFFF"

    [datasource = pod] {
        query: MessageChannel
        sort: {
            edgeSource: {
                name: messageChannel
                sortAscending: false
                sortProperty: dateSent
            }
            targetType: "Message"
        }
    }
}


.inbox-data {
    name: "inbox"
    title: "Inbox"
    defaultRenderer: list
    cols: 8
    showTopBar: false
    topBarColor: "#FFFFFF"
    showEditCode: false

    [datasource = pod] {
        filter: {
            properties: {
                pluginType: "importer"
            }
        }
        query: Plugin
    }

    [renderer = list] {
        onPress: noop
        hideSeparators: true
    }

    Plugin > list {
            HStack {
            show: {{.~plugin[].last().status = "daemon" OR .~plugin[].last().status = "cvuPresented"}}
            alignment: topleft
                spacing: 10

                Text {
                    text: "Uploading {.name} data:"
                    font: bodyText1
                }

                Observer {
                    item: {{.~plugin[].last()}}
                    property: "progress"

                    Text {
                        color: #4F56FE
                        font: headline1
                        text: "{.~plugin[].last().progress.percent()}%"
                    }
                }
            }

    }
}