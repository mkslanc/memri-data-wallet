.create-new-model {
    cols: 12
    defaultRenderer: singleItem
    scrollable: true
    title: "Create a new model"

    Project > singleItem {
        VStack {
            alignment: topleft
            padding: 60 30 30 30

            Text {
                color: #333333
                font: headline1
                padding: 0 0 10 0
                text: "Load a dataset, finetune and train a model"
            }

            Text {
                color: #333333
                font: bodyText1
                text: "Use our preconfigured template, with setup, testing, and CI ready to go. Add a few lines of code and create your new app."
            }

            Button {
                isLink: true
                onPress: [
                    analytics
                    {
                        name: "project_tutorial_link"
                        params: ["model building guide", "https://docs.memri.io/guides/load_dataset_finetune/"]
                    }
                    openLink
                    {
                        link: "https://docs.memri.io/guides/load_dataset_finetune/"
                    }
                ]
                padding: 15 0 35 0

                Text {
                    color: #E9500F
                    font: link
                    text: "Read the model building guide"
                }

                Image {
                    alignment: center
                    bundleImage: "ico_arrow"
                    color: #E9500F
                    isVector: true
                    padding: 0 0 0 15
                }
            }

            Text {
                color: #333333
                font: bodyText1
                padding: 0 0 10 0
                text: "Load your dataset and start training your model on Google Collab:"
            }

            Button {
                background: #f6f6f6
                onPress: [
                    analytics
                    {
                        name: "project_google_colab"
                    }
                    openLink
                    {
                        link: {{fromConfig("colablink")}}
                    }
                ]
                width: 200

                HStack {
                    alignment: left

                    Image {
                        bundleImage: "google_colab"
                        isVector: true
                        padding: 0 12 0 12
                    }

                    Text {
                        color: #E9500F
                        font: button_label
                        text: "Open in Colab"
                    }
                }
            }

            Text {
                color: #333333
                font: headline2
                padding: 30 0 10 0
                text: "References:"
            }

            HStack {
                alignment: left
                maxWidth: 590

                VStack {
                    alignment: topleft

                    Text {
                        color: #828282
                        font: small_caps
                        text: "YOUR DATASET NAME"
                    }

                    Text {
                        color: #333333
                        text: {{.dataset.name}}
                    }
                }

                Spacer

                Button {
                    onPress: [
                        copytoclipboard
                        {
                            value: {{.dataset.name}}
                        }
                    ]

                    Image {
                        alignment: center
                        bundleImage: "ico_log_out_rotated"
                        color: #E9500F
                        isVector: true
                    }
                }
            }

            HStack {
                alignment: left
                maxWidth: 590

                VStack {
                    alignment: topleft

                    Text {
                        color: #828282
                        font: small_caps
                        text: "YOUR LOGIN KEY"
                    }

                    Text {
                        color: #333333
                        text: "**** **** **** **** ***** *****"
                    }
                }

                Spacer

                Button {
                    onPress: [
                        copytoclipboard
                        {
                             value: "ownerKey"
                        }
                    ]

                    Image {
                        alignment: center
                        bundleImage: "ico_log_out_rotated"
                        color: #E9500F
                        isVector: true
                    }
                }
            }

            HStack {
                alignment: left
                maxWidth: 590

                VStack {
                    alignment: topleft

                    Text {
                        color: #828282
                        font: small_caps
                        text: "YOUR PASSWORD KEY"
                    }

                    Text {
                        color: #333333
                        text: "**** **** **** **** ***** *****"
                    }
                }

                Spacer

                Button {
                    onPress: [
                        copytoclipboard
                        {
                            value: "databaseKey"
                        }
                    ]

                    Image {
                        alignment: center
                        bundleImage: "ico_log_out_rotated"
                        color: #E9500F
                        isVector: true
                    }
                }
            }

            Text {
                color: #333333
                font: headline1
                padding: 60 0 20 0
                text: "Deploy your data app from gitlab to pod"
            }

            Text {
                color: #333333
                font: bodyText1
                padding: 0 0 10 0
                text: "To be able to use your plugin, you have to publish a docker container with your plugin to the gitlab container registry of your repo. "
            }

            VStack {
                alignment: topleft
                background: #F0F0F0
                padding: 10

                Text {
                    color: #333333
                    font: small_caps
                    padding: 0 0 0 10
                    text: "YOUR PLUGIN GITLAB ADDRESS"
                }

                Textfield {
                    background: #F0F0F0
                    border: #000 1
                    hint: "https://gitlab.memri.io/username/myplugin"
                    isCollapsed: true
                    maxWidth: 571
                    rows: 1
                    value: {{.gitlabUrl}}
                }
            }

            Button {
                isLink: true
                onPress: [
                    analytics
                    {
                        name: "project_tutorial_link"
                        params: ["project_how_to_link","https://docs.memri.io/guides/build_and_deploy_your_model/"]
                    }
                    openLink
                    {
                        link: "https://docs.memri.io/guides/build_and_deploy_your_model/"
                    }
                ]
                padding: 20 0 0 0

                Text {
                    color: #E9500F
                    font: link
                    text: "Read the plugin deployment guide"
                }

                Image {
                    alignment: center
                    bundleImage: "ico_arrow"
                    color: #E9500F
                    isVector: true
                    padding: 0 0 0 15
                }
            }

            Wrap {
                alignment: left
                padding: 30 0 0 0
                spacing: 15

                Button {
                    onPress: [
                        analytics
                        {
                            name: "project_plugin_gitlab_url"
                            params: {{.gitlabUrl}}
                        }
                        analytics
                        {
                            name: "project_deploy_app"
                        }
                        parsePlugin
                        {
                            project: {{.}}
                            url: {{.gitlabUrl}}
                        }
                        openView
                        {
                            viewName: "app-deployed"
                        }
                    ]
                    styleName: primaryButton

                    Text {
                        text: "Deploy your app"
                        textalign: bottom
                    }

                    Image {
                        alignment: center
                        bundleImage: "ico_arrow"
                        isVector: true
                        padding: 0 0 0 15
                    }
                }

                Button {
                    onPress: back

                    Text {
                        color: #333333
                        font: button_label
                        text: "Back to labelling summary"
                    }
                }
            }
        }
    }
}

.app-deployed {
    defaultRenderer: singleItem
    title: "App deployed"

    Project > singleItem {
        VStack {
            alignment: topleft
            padding: 60 30 30 30

            Text {
                color: #333333
                font: headline1
                padding: 0 0 10 0
                text: "Your data app is deployed into the pod!"
            }

            RichText {
                color: #333333
                font: bodyText1
                spans: [
                    {
                        text: "You can now "
                    }
                    {
                        color: #E9500F
                        font: 14 bold
                        onPress: [
                            openView
                            {
                                clearStack: true
                                viewName: "apps-and-plugins"
                            }
                        ]
                        text: "open and run your app"
                    }
                    {
                        text: ", "
                    }
                    {
                        color: #E9500F
                        font: 14 bold
                        onPress: [
                            generatePluginCvu
                            {
                                features: {{.dataset.feature[]}}
                                plugin: {{.labellingPlugin}}
                                query: {{.dataset.datasetType.queryStr}}
                            }
                            openView
                            {
                                clearStack: true
                                item: {{.labellingPlugin}}
                                viewName: {{.labellingPlugin.view.name}}
                            }
                            opencvueditor
                            {
                                openForce: true
                                viewArguments: {
                                    buttons: {
                                        Observer {
                                            item: {{.labellingPlugin.~plugin[].last()}}
                                            property: "status"

                                            Button {
                                                background: {{.labellingPlugin.~plugin ? "#15B599" : "#4F56FE"}}
                                                onPress: [
                                                    pluginRun
                                                    {
                                                        container: {{.labellingPlugin.containerImage}}
                                                        name: {{.labellingPlugin.name}}
                                                        pluginId: {{.labellingPlugin.id}}
                                                        pluginModule: {{.labellingPlugin.pluginModule}}
                                                        pluginName: {{.labellingPlugin.pluginName}}
                                                    }
                                                ]

                                                Text {
                                                    color: #F5F5F5
                                                    font: link
                                                    padding: 3 13 3 3
                                                    text: {{.labellingPlugin.~plugin[].last().status = "started" OR .labellingPlugin.~plugin[].last().status = "idle" ? "Running" : .labellingPlugin.~plugin[].last().status = "done" OR .labellingPlugin.~plugin[].last().status = "error" ? "Success!" : "Run your app"}}
                                                }

                                                LoadingIndicator {
                                                    show: {{.labellingPlugin.~plugin[].last().status = "started" OR .labellingPlugin.~plugin[].last().status = "idle"}}
                                                    size: 20
                                                }
                                            }
                                        }
                                    }
                                    customDefinition: {{projectItem.labellingPlugin.view.definition}}
                                    projectItem: {{.}}
                                }
                            }
                        ]
                        text: "configure the UI"
                    }
                    {
                        text: ", or "
                    }
                    {
                        color: #E9500F
                        font: 14 bold
                        onPress: [
                            openView
                            {
                                clearStack: true
                                viewName: "apps-and-plugins"
                            }
                            openView
                            {
                                clearStack: true
                                item: {{.labellingPlugin}}
                                viewArguments: {
                                    addPageIfMissing: true
                                    pageLabel: "mainApp"
                                }
                                viewName: "pluginConfig"
                            }
                        ]
                        text: "edit the app settings"
                    }
                    {
                        text: "."
                    }
                ]
            }

            HStack {
                alignment: left
                padding: 30 0 0 0

                Button {
                    onPress: [
                        generatePluginCvu
                        {
                            features: {{.dataset.feature[]}}
                            plugin: {{.labellingPlugin}}
                            query: {{.dataset.datasetType.queryStr}}
                        }
                        openView
                        {
                            clearStack: true
                            item: {{.labellingPlugin}}
                            viewName: {{.labellingPlugin.view.name}}
                        }
                        opencvueditor
                        {
                            item: {{.labellingPlugin}}
                            openForce: true
                            viewArguments: {
                                buttons: {
                                    Observer {
                                        item: {{.~plugin[].last()}}
                                        property: "status"

                                        Button {
                                            background: {{.~plugin ? "#15B599" : "#4F56FE"}}
                                            onPress: [
                                                pluginRun
                                                {
                                                    container: {{.containerImage}}
                                                    name: {{.name}}
                                                    pluginId: {{.id}}
                                                    pluginModule: {{.pluginModule}}
                                                    pluginName: {{.pluginName}}
                                                }
                                            ]

                                            Text {
                                                color: #F5F5F5
                                                font: link
                                                padding: 3 13 3 3
                                                text: {{.~plugin[].last().status = "started" OR .~plugin[].last().status = "idle" ? "Running" : .~plugin[].last().status = "done" OR .~plugin[].last().status = "error" ? "Success!" : "Run your app"}}
                                            }

                                            LoadingIndicator {
                                                show: {{.~plugin[].last().status = "started" OR .~plugin[].last().status = "idle"}}
                                                size: 20
                                            }
                                        }
                                    }
                                }
                                customDefinition: {{projectItem.labellingPlugin.view.definition}}
                                projectItem: {{.}}
                            }
                        }
                    ]
                    styleName: primaryButton

                    Text {
                        text: "Add UI to your app"
                        textalign: bottom
                    }

                    Image {
                        alignment: center
                        bundleImage: "ico_arrow"
                        isVector: true
                        padding: 0 0 0 15
                    }
                }

                Button {
                    onPress: back
                    padding: 0 0 0 15

                    Text {
                        color: #333333
                        font: button_label
                        text: "Back"
                    }
                }
            }
        }
    }
}