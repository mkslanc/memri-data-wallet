
.allData {
    defaultRenderer: custom
    scrollable: false
    title: "All Data"

    VStack {
        alignment: topleft
        maxWidth: 910
        padding: 60 30 60 30

        HStack {
            alignment: bottomleft

            Text {
                color: #333333
                font: headline2
                text: "Data streams"
            }

            Spacer

            Button {
                isLink: true
                onPress: [
                    openLink
                    {
                        link: "https://memri.docs.memri.io/pod-explorer/"
                    }
                ]

                Text {
                    color: #FE570F
                    font: link
                    text: "Open data explorer"
                }
            }
        }

        SubView {
            view: {
                defaultRenderer: grid

                [datasource = pod] {
                    filter: {
                        properties: {
                            pluginType: "importer"
                        }
                    }
                    query: Plugin
                }

                [renderer = grid] {
                    layout: "flow"
                    onPress: [
                        openPlugin
                        {
                            plugin: {{.}}
                        }
                    ]
                    spacing: 30
                    trailingElement: {
                        Button {
                            isLink: true
                            onPress: [
                                openView
                                {
                                    viewName: "createNewImporter"
                                }
                            ]

                            VStack {
                                alignment: leftspacebetween
                                background: "#FFFFFF"
                                border: "#F0F0F0"
                                height: 96
                                padding: 10
                                spacing: 5
                                width: 205

                                Text {
                                    color: "#333333"
                                    font: headline3
                                    text: "Create new importer"
                                }
                            }
                        }
                    }
                }

                Plugin > grid {
                    viewArguments: {
                        datasources: {
                            featureVariables: {
                                filter: {
                                    properties: {
                                        itemType: {{.~datasetPlugin.queryStr.fromJson("type")}}
                                    }
                                }
                                query: ItemPropertySchema
                            }
                        }
                    }

                    VStack {
                        alignment: leftspacebetween
                        background: {{.~plugin ? "#F5F5F5" : "#FFFFFF"}}
                        border: "#F0F0F0"
                        height: 96
                        padding: 10
                        spacing: 5
                        width: 205

                        Text {
                            color: {{.~plugin ? "#333333" : "#999999"}}
                            font: headline3
                            text: {{.name}}
                        }

                        Text {
                            color: #989898
                            font: body_tiny
                            padding: 0 5
                            show: {{.~plugin}}
                            text: {{.datasourceItems("featureVariables").count() + " feature variables"}}
                        }

                        Observer {
                            item: {{.~plugin[].last()}}
                            property: "progress"

                            Text {
                                color: #FE570F
                                font: "body_tiny_bold"
                                padding: 0 10 0 0
                                show: {{!.~plugin}}
                                text: "Connect"
                            }

                            Text {
                                color: {{.~plugin[].last().status = "error" ? "#FE570F" : "#15B599"}}
                                font: body_tiny
                                padding: 0 10 0 0
                                show: {{.~plugin[].last().status = "ready" OR .~plugin[].last().status = "error" OR .~plugin[].last().progress = 1}}
                                text: "{.~plugin[].last().status = 'error' ? 'Error' : 'Running'}"
                            }

                            Text {
                                color: #4F56FE
                                font: body_tiny
                                show: {{.~plugin[].last().status = "daemon" OR .~plugin[].last().status = "cvuPresented"}}
                                text: "Downloading data {.~plugin[].last().progress.percent()} %"
                            }
                        }
                    }
                }
            }
        }
    }
}