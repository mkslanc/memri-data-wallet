.labelingAnnotation {
    additional: {
        HStack {
            alignment: left
            padding: 50

            Button {
                onPress: [
                    openView
                    {
                        item: {{.~labellingTask.~dataset}}
                        viewArguments: {
                            pageLabel: "~main"
                            selectedProject: {{.}}
                        }
                        viewName: "project-overview"
                    }
                ]
                styleName: primaryButton

                Text {
                    text: "Finish labelling"
                    textalign: bottom
                }

                Image {
                    alignment: center
                    bundleImage: "ico_arrow"
                    isVector: true
                    padding: 0 0 0 15
                }
            }
        }
    }
    cols: 9
    defaultRenderer: labelAnnotation
    emptyResultText: "There are no annotations here yet"
}

.labelingSummary {
    cols: 3
    defaultRenderer: singleItem

    [renderer = singleItem] {
        scrollable: false
    }

    LabellingTask > singleItem {
        VStack {
            alignment: topleft
            padding: 60 0 30 0

            Text {
                color: #999999
                font: small_caps
                text: "SUMMARY"
            }

            Text {
                font: headline2
                padding: 0 0 30 0
                text: {{.~labellingTask.datasetType.name}}
            }

            Text {
                color: #999999
                font: small_caps
                text: "TASK"
            }

            Observer {
                itemType: "LabelOption"

                VStack {
                    HStack {
                        alignment: left
                        padding: 0

                        Text {
                            color: #999999
                            font: ul
                            text: "Submitted"
                        }

                        Text {
                            color: #333333
                            font: ul
                            text: "{.labelAnnotation[.isSubmitted = true].count()} annotations"
                        }

                        VStack {
                            alignment: top

                            Text {
                                color: #333333
                                font: small_caps
                                text: "{.labelAnnotation[.isSubmitted = true].count().percent(.~labellingTask.entry[].count())}%"
                            }
                        }
                    }

                    HStack {
                        alignment: left

                        Text {
                            color: #999999
                            font: ul
                            text: "Skipped"
                        }

                        Text {
                            color: #333333
                            font: ul
                            text: "{.labelAnnotation[.isSubmitted = false].count()} annotations"
                        }

                        VStack {
                            alignment: top

                            Text {
                                color: #333333
                                font: small_caps
                                text: "{.labelAnnotation[.isSubmitted = false].count().percent(.~labellingTask.entry[].count())}%"
                            }
                        }
                    }
                }
            }

            HStack {
                alignment: left

                Text {
                    color: #999999
                    font: ul
                    text: "Dataset"
                }

                Text {
                    color: #333333
                    font: ul
                    text: "{.~labellingTask.entry[].count()} annotations"
                }
            }

            Text {
                color: #999999
                font: small_caps
                padding: 20 0 0 0
                text: "LABELS"
            }

            SubView {
                view: {
                    defaultRenderer: list
                    editMode: false
                    viewArguments: {
                        labellingTask: {{labellingTask}}
                    }

                    [datasource = pod] {
                        filter: {
                            edgeSources: {
                                labelOption: {{labellingTask}}
                            }
                        }
                        query: LabelOption
                    }

                    [renderer = list] {
                        edgeInset: 0
                        hideSeparators: true
                        spacing: 0
                    }

                    LabelOption > list {
                        Observer {
                            itemType: "LabelOption"

                            HStack {
                                alignment: left

                                Text {
                                    color: #333333
                                    font: ul
                                    text: "{.name} {.~categoricalLabel[].count()}"
                                }

                                VStack {
                                    alignment: top

                                    Text {
                                        color: #333333
                                        font: small_caps
                                        text: "{.~categoricalLabel[].count().percent(.~labelOption.~labellingTask.entry[].count())} %"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

.labeling {
    cols: 12
    defaultRenderer: scene
    name: "labeling"
    title: "Labeling"

    [renderer = scene] {
        pages: {
            labelingAnnotation: "labelingAnnotation"
            labelingSummary: "labelingSummary"
        }
        viewArguments: {
            labellingTask: {{.}}
        }
    }
}