.labellingAnnotation {
    cols: 9
    defaultRenderer: labelAnnotation
    emptyResultText: "There are no annotations here yet"
}

.labellingSummary {
    cols: 3
    defaultRenderer: singleItem

    [renderer = singleItem] {
        scrollable: false
    }

    LabellingTask > singleItem {
        viewArguments: {
            datasources: {
                datasetEntries: {
                    filter: {
                        edgeSources: {
                            entry: {{labellingTask.~labellingTask}}
                        }
                    }
                    query: DatasetEntry
                }
                skipped: {
                    filter: {
                        edgeSources: {
                            annotation: {{datasourceItems("datasetEntries")}}
                        }
                        properties: {
                            isSubmitted: false
                        }
                    }
                    query: CategoricalLabel
                }
                submitted: {
                    filter: {
                        edgeSources: {
                            annotation: {{datasourceItems("datasetEntries")}}
                        }
                        properties: {
                            isSubmitted: true
                        }
                    }
                    query: CategoricalLabel
                }
            }
            labellingTask: {{.}}
        }

        VStack {
            alignment: topleft
            padding: 60 0 30 0
            spacing: 2

            Text {
                color: #999999
                font: small_caps
                text: "SUMMARY"
            }

            Text {
                font: headline2
                padding: 0 0 30 0
                text: {{.~labellingTask.name}}
            }

            Text {
                color: #999999
                font: small_caps
                padding: 20 0 0 0
                text: "ITEMS"
            }

            HStack {
                alignment: left
                padding: 0

                Text {
                    color: #999999
                    font: ul
                    text: "Submitted"
                }

                Text {
                    color: #333333
                    font: ul
                    text: {{datasourceItems("submitted").count()}}
                }

                VStack {
                    alignment: top
                    height: 22

                    Text {
                        color: #333333
                        font: small_caps
                        text: {{datasourceItems("submitted").count().percent(datasourceItems("datasetEntries").count()) + "%"}}
                    }
                }
            }

            HStack {
                alignment: left
                padding: 0

                Text {
                    color: #999999
                    font: ul
                    text: "Skipped"
                }

                Text {
                    color: #333333
                    font: ul
                    text: {{datasourceItems("skipped").count()}}
                }

                VStack {
                    alignment: top
                    height: 22

                    Text {
                        color: #333333
                        font: small_caps
                        text: {{datasourceItems("skipped").count().percent(datasourceItems("datasetEntries").count()) + "%"}}
                    }
                }
            }

            HStack {
                alignment: left

                Text {
                    color: #999999
                    font: ul
                    text: "Dataset"
                }

                Text {
                    color: #333333
                    font: ul
                    text: {{datasourceItems("datasetEntries").count()}}
                }
            }

            Text {
                color: #999999
                font: small_caps
                padding: 20 0 0 0
                text: "LABELS"
            }

            SubView {
                view: {
                    defaultRenderer: list
                    editMode: false
                    viewArguments: {
                        datasetEntries: {{datasourceItems("datasetEntries")}}
                        labellingTask: {{labellingTask}}
                        submitted: {{datasourceItems("submitted")}}
                    }

                    [datasource = pod] {
                        filter: {
                            edgeSources: {
                                labelOption: {{labellingTask}}
                            }
                        }
                        query: LabelOption
                    }

                    [renderer = list] {
                        edgeInset: 0
                        hideSeparators: true
                        readOnly: true
                        spacing: 0
                    }

                    LabelOption > list {
                        viewArguments: {
                            datasources: {
                                categoricalLabels: {
                                    filter: {
                                        edgeSources: {
                                            annotation: {{datasetEntries}}
                                        }
                                        properties: {
                                            labelValue: {{.name}}
                                        }
                                    }
                                    query: CategoricalLabel
                                }
                            }
                        }

                        HStack {
                            alignment: left

                            Text {
                                color: #333333
                                font: ul
                                padding: 0 0 0 0
                                text: "{.name}"
                            }

                            Text {
                                color: #333333
                                font: ul
                                padding: 0 0 0 0
                                text: {{datasourceItems("categoricalLabels").count()}}
                            }

                            VStack {
                                alignment: top
                                height: 22

                                Text {
                                    color: #333333
                                    font: small_caps
                                    text: {{datasourceItems("categoricalLabels").count().percent(submitted.count()) + "%"}}
                                }
                            }
                        }
                    }
                }
            }

            Wrap {
                alignment: left
                padding: 30 0 0 0
                spacing: 15

                Button {
                    onPress: [
                        openView
                        {
                            item: {{.~labellingTask.~dataset}}
                            viewArguments: {
                                pageLabel: "~main"
                                readOnly: true
                                selectedProject: {{.}}
                            }
                            viewName: "project-overview"
                        }
                    ]
                    styleName: primaryButton

                    Text {
                        text: "Continue"
                        textalign: bottom
                    }

                    Image {
                        alignment: center
                        bundleImage: "ico_arrow"
                        isVector: true
                        padding: 0 0 0 15
                    }
                }

                Button {
                    onPress: [
                        back
                        {
                            pageLabel: "~main"
                        }
                    ]

                    Text {
                        color: #333333
                        font: button_label
                        text: "Back to labelling set up"
                    }
                }
            }
        }
    }
}

.labelling {
    cols: 12
    defaultRenderer: scene
    name: "labelling"
    title: "Labelling"

    [renderer = scene] {
        pages: {
            labellingAnnotation: "labellingAnnotation"
            labellingSummary: "labellingSummary"
        }
        viewArguments: {
            labellingTask: {{.}}
        }
    }
}